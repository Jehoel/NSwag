private static String ConvertToString(Object value, CultureInfo cultureInfo)
{
    if (value is Enum e)
    {
        Type enumType = value.GetType();
        String name = Enum.GetName(enumType, e);
        if (name != null)
        {
            var field = IntrospectionExtensions.GetTypeInfo(enumType).GetDeclaredField(name);
            if (field != null)
            {
                var attribute = CustomAttributeExtensions.GetCustomAttribute(field, typeof(EnumMemberAttribute)) as EnumMemberAttribute;
                if (attribute != null)
                {
                    return attribute.Value;
                }
            }
        }
    }
    else if (value is Byte[] bytes)
    {
        return Convert.ToBase64String(bytes);
    }
    else if (value != null && value.GetType().IsArray)
    {
        IEnumerable<String> ies = ((Array)value).OfType<Object>().Select( o => ConvertToString( o, cultureInfo ) );
        return String.Join( ",", ies );
    }

    return Convert.ToString(value, cultureInfo);
}